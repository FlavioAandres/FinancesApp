service: personal-interface
plugins:
  - serverless-offline
provider:
  name: aws
  runtime: nodejs12.x
  stage: test
  memorySize: 512 # optional, in MB, default is 1024
  timeout: 15 # optional, in seconds, default is 6
functions:
  TwilioIncommingMessage:
    handler: Personal-Interfaces/Functions/handlerIncommingMessage.handler
    name: TwilioIncommingMessage-lambda-${opt:stage}
    environment: 
      NODE_ENV: ${opt:stage}
      MONGO_SRV:  ${file(./config/${opt:stage}.json):SRV_CONFIG}
      MONGO_PORT: 27017
      MONGO_HOST: ${file(./config/${opt:stage}.json):MONGO_HOST}
      MONGO_SECRET: ${file(./config/${opt:stage}.json):MONGO_SECRET}
      MONGO_DATABASE: ${file(./config/${opt:stage}.json):MONGO_DATABASE}
      MONGO_SET: ${file(./config/${opt:stage}.json):MONGO_SET}
      MONGO_USER: ${file(./config/${opt:stage}.json):MONGO_USER}
      BODY_REQUEST: ${file(./config/${opt:stage}.json):BODY_REQUEST}
      MONGO_SSL: true
    events: 
      - http: 
          path: '/whatsapp/webhook/'
          method: 'post'
          cors: 
            - enabled: true
            - origin: '*'
            - headers:  
              - Content-Type
              - Transfer-encoding
  GetPrepayments:
    handler: Personal-Interfaces/Functions/PrePayments.get
    name: PrepaymentsRepo-get-${opt:stage}
    environment: 
      NODE_ENV: ${opt:stage}
      MONGO_SRV:  ${file(./config/${opt:stage}.json):SRV_CONFIG}
      MONGO_PORT: 27017
      MONGO_HOST: ${file(./config/${opt:stage}.json):MONGO_HOST}
      MONGO_SECRET: ${file(./config/${opt:stage}.json):MONGO_SECRET}
      MONGO_DATABASE: ${file(./config/${opt:stage}.json):MONGO_DATABASE}
      MONGO_SET: ${file(./config/${opt:stage}.json):MONGO_SET}
      MONGO_USER: ${file(./config/${opt:stage}.json):MONGO_USER}
      BODY_REQUEST: ${file(./config/${opt:stage}.json):BODY_REQUEST}
      MONGO_SSL: true
    events: 
      - http: 
          path: /prepayments
          method: GET
          cors: 
            - enabled: true
            - origin: '*'
            - headers:  'Access-Control-Allow-Origin'
  PutPrepayments:
    handler: Personal-Interfaces/Functions/PrePayments.put
    name: PrepaymentsRepo-put-${opt:stage}
    environment: 
      NODE_ENV: ${opt:stage}
      MONGO_SRV:  ${file(./config/${opt:stage}.json):SRV_CONFIG}
      MONGO_PORT: 27017
      MONGO_HOST: ${file(./config/${opt:stage}.json):MONGO_HOST}
      MONGO_SECRET: ${file(./config/${opt:stage}.json):MONGO_SECRET}
      MONGO_DATABASE: ${file(./config/${opt:stage}.json):MONGO_DATABASE}
      MONGO_SET: ${file(./config/${opt:stage}.json):MONGO_SET}
      MONGO_USER: ${file(./config/${opt:stage}.json):MONGO_USER}
      BODY_REQUEST: ${file(./config/${opt:stage}.json):BODY_REQUEST}
      PHONE_NUMBER: ${file(./config/${opt:stage}.json):PHONE_NUMBER}
      MONGO_SSL: true
    events: 
      - http: 
          path: /prepayments
          method: PUT
          cors: 
            - enabled: true
            - origin: '*'
            - headers:  'Access-Control-Allow-Origin'
  GetStats:
    handler: Personal-Interfaces/Functions/BoxFlow.get
    name: StatsRepo-get-${opt:stage}
    environment: 
      NODE_ENV: ${opt:stage}
      MONGO_SRV:  ${file(./config/${opt:stage}.json):SRV_CONFIG}
      MONGO_PORT: 27017
      MONGO_HOST: ${file(./config/${opt:stage}.json):MONGO_HOST}
      MONGO_SECRET: ${file(./config/${opt:stage}.json):MONGO_SECRET}
      MONGO_DATABASE: ${file(./config/${opt:stage}.json):MONGO_DATABASE}
      MONGO_SET: ${file(./config/${opt:stage}.json):MONGO_SET}
      MONGO_USER: ${file(./config/${opt:stage}.json):MONGO_USER}
      BODY_REQUEST: ${file(./config/${opt:stage}.json):BODY_REQUEST}
      PHONE_NUMBER: ${file(./config/${opt:stage}.json):PHONE_NUMBER}
      MONGO_SSL: true
    events: 
      - http: 
          path: /boxflow/stats
          method: GET
          cors: 
            - enabled: true
            - origin: '*'
            - headers:  'Access-Control-Allow-Origin'
  EmailChecker:
    handler: AutomationServices/AutoMailChecker/checker.start
    name: AutomationServices-EmailChecker-${opt:stage}
    events: 
      - schedule: 
          name: 'cw-start-email-checker'
          description: 'Function to connecto to Gmail :D'
          rate: rate(20 minutes)
          enabled: true
    environment: 
      MONGO_SRV:  ${file(./config/${opt:stage}.json):SRV_CONFIG}
      MONGO_HOST: ${file(./config/${opt:stage}.json):MONGO_HOST}
      MONGO_PORT: '27017'
      MONGO_SECRET: ${file(./config/${opt:stage}.json):MONGO_SECRET}
      MONGO_SET: ${file(./config/${opt:stage}.json):MONGO_SET}
      MONGO_SSL: true
      MONGO_USER: ${file(./config/${opt:stage}.json):MONGO_USER}
      EMAIL_USERNAME: ${file(./config/${opt:stage}.json):EMAIL_USERNAME}
      EMAIL_PASSWORD: ${file(./config/${opt:stage}.json):EMAIL_PASSWORD}
      NODE_ENV: ${opt:stage}
    